name: AWS IoT Thing Setup

on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
        description: "AWS region to create IoT resources"
      thing-name:
        required: true
        type: string
        description: "AWS IoT thing name to create"
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_SESSION_TOKEN:
        required: true

jobs:
  create-iot-resources:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_DEFAULT_REGION: ${{ inputs.aws-region }}

    steps:
      - name: Generate Unique Names
        id: set-vars
        run: |
          THING_NAME="${{ inputs.thing-name }}"
          echo "THING_NAME=$THING_NAME" >> $GITHUB_ENV
          echo "$THING_NAME"

  use-iot-credentials:
    runs-on: ubuntu-latest
    needs: create-iot-resources

    steps:
      - name: Set environment variables
        run: |
          echo "Using IoT credentials for thing: $THING_NAME"

  cleanup-iot-resources:
    runs-on: ubuntu-latest
    needs: use-iot-credentials
    if: always()  # Ensures cleanup runs even if the previous job fails

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_DEFAULT_REGION: ${{ inputs.aws-region }}

    steps:
      - name: Cleanup IoT Resources
        env:
          THING_NAME: ${{ inputs.thing-name }}
        run: |
          echo "Cleaning up IoT resources for thing: $THING_NAME"
